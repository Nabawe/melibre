+ CODEX
+ JavaScript
+ TypeScript
+ Una f no tiene q funcionar si le falta algo fundamental ( ? Critico )
+ GPS CSS
+ User Defined Files Load
+ When writing Sources
+ Checks should return false by default


+ CODEX


+ JavaScript
    g_globalVar
    g_GlobalObject
    g_in_var
        global input var
    f_function
    .m_method
    o_Object
    c_Class
    e_HTMLElement           Need to define if only proper DOM elements or strings to insert as HTML.
    Array?                  Array or a_Array need to define, casi seguro q lo correcto es camelCase pero revisando codigo viejo veo q uso PascalCase como en los Objetos. ! Definir.
    Modulos                 .mjs or .module.js or similar. Pero para el nombre en si del modulo?
    cb                      Callback
    getter, setter          getters and setters should start with getX, setX but the question is about opbject properties that use them, how to distinguish them

    Definir si aplicar este tipo de nomenclatura solo a nivel global, ya q por ejemplo dentro de una funci칩n queda m치s prolija usar :
        nombreVariable
        NombreObjeto
    Pero para funciones y clases queda bien el f_ y c_

    Para CONSTANTES globales NOMBRE_CONSTANTE

    https://www.robinwieruch.de/javascript-naming-conventions/
+


+ TypeScript
    t_Name              for Types or Interfaces
    h_Name              for Type Helpers
+


+ Una f no tiene q funcionar si le falta algo fundamental ( ? Critico )
    function f_missingDivs (num, ini = 1, end, step = 1) {} ;
        No puedo usar default end = num ya q sino permitiria una ejecucion invalida, lo correcto es checkear antes de llamar para algo critico y no q la f tenga q "arreglarselas"
    ! En todo caso usar esto para devolver un error
+


+ GPS CSS
    g-      .global
    p-      #page
    v-      #view
    s-      #section

    --      part of smth                            card--cutoff or card--iframe
    -       list, variation, like BEM Modifiers     btn-1, box-items-tight

    box-    container                               box-instances
+


+ Stylus-Lang
    $       variables
    $f-     functions
    $m-     mixins
    $e-     extends
+


+ User Defined Files Load
    When loading files defined by the user always add a "default" in case they fail to load, comply, etc.

    categories = f_validate( user_provided.json ) || f_validate( default_categories.json )

    The default files need to be validated too, and this does not avoid the need to make checks to the asigned var afterwards.
+


+ When writing Sources
    Acostumbrar agregar algun pensamiento o rese침a al agregar una source.
+


+ Checks should return false by default
    Al escribir checkeos conciderar q estos retornen false o 0 cuando esta todo bien permitiendo utilizqar luego estructuras como la siguiente con m치s naturalidad:

    m_getById( id ) {
        return this.#dataChecks()
        || ( this.i.find( obj => id === obj.id )
            || new Error( ErrsMsgs['SEARCH__NOT_FOUND'], { cause: 'SEARCH__NOT_FOUND' } ) )
        ;
    };
+



/* +Variables */ (Global)
/* +Classes and Objects */
/* +Header */
/* +Functions */
/* <3 */
/* +DELETE */
/* +SOURCES */
